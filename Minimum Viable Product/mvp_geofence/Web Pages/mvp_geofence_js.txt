    // Hide the default footer & header from the web page
    
    $(document).ready(() => {  
        
        //console.log(document.getElementsByTagName("nav")[0].innerHTML);
          
        // Hiding the default navbar part
            
        // var e=document.getElementsByTagName("nav")[0];
        // e.parentNode.removeChild(e);
        
        // Hiding the default footer part
        
        var f=document.getElementsByClassName("web-footer")[0];
        f.parentNode.removeChild(f);
        
    });

    // Login required

    $(document).ready(()=>{
 
        if (frappe.user_id==="Guest"){
            
            window.location.assign("/login");
            
        } // if ends here
        
    });//end windows.ready

    //  Employee information at the Right Corner
    
    frappe.ready(() => {
    
        var url=`/api/resource/Employee/?filters=[["user_id","=","${frappe.user_id}"]]&fields=["image","first_name","department"]`;
        // console.log(url);
        
        fetch(url).then((r)=>r.json()).then((js)=>{//console.log(js);
        var item=js.data[0];
        
            // document.getElementById("nav_user").setAttribute("src",item.image);
            document.getElementById("nav_name").innerHTML=item.first_name;
            document.getElementById("de").innerHTML=item.department;
        
        }); // fetch url ends here
            
    }); // frappe.ready ends here

    //  Employee image at the Right Corner
    
    frappe.ready(() => {
        
        var url=`/api/resource/Employee/?filters=[["user_id","=","${frappe.user_id}"]]&fields=["image","first_name"]`;
            // console.log(url);
            
            fetch(url).then((r)=>r.json()).then((js)=>{//console.log(js);
            var item=js.data[0];
            //console.log(item);
        
            if (item.image){
        
                var a=document.getElementById("nav_user");
                a.setAttribute("class","border");
                a.setAttribute("src",item.image);
                
            } // if ends here
            
            else {
                
                var sn=item.first_name.substring(0,2).toUpperCase();
                var b=document.getElementById("nav_user");
                b.setAttribute("class","border");
                b.setAttribute("src",generated(sn));
                
            } // else ends here
            
            document.getElementById("nav_name").innerHTML=item.first_name;
            
        }); // fetch url ends here
        
        function generated(name) {
             
            let canvas = document.createElement('canvas');
              
            canvas.height = 180;
            canvas.width  = 180;
              
            let context = canvas.getContext('2d');
              
            //context.drawImage(this.poster, 0, 0)
            context.fillStyle = "#eef0f2";
            context.fillRect(0, 0, canvas.width, canvas.height);
              
            context.font = "50px Arial";
            context.fillStyle="black";
            context.fillText(name, 50, 95);
              
            return canvas.toDataURL('image/jpeg');
              
        } // function ends here
            
    }); // frappe.ready ends here

    let count=0;
    let watchId;
    let geoLoc;
    const options = {
        
        enableHighAccuracy: true,
        maximumAge: 30000,
        timeout: 27000
        
    };
        
    // 
        
    function startWatch(){
        
        geoLoc=navigator.geolocation;
        watchId = geoLoc.watchPosition(success, error, options);
        
    } // function ends here
    
    // 
    
    function success(position) {
        
        count+=1;
        
        if (count===2){

            var latlon=new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
            var mapholder=document.getElementById('map');
            mapholder.style.height='450px';
            mapholder.style.width='100%';
            
            var myOptions={
                
                center:latlon,zoom:18,
                mapTypeId:google.maps.MapTypeId.ROADMAP,
                mapTypeControl:false,
                navigationControlOptions:{style:google.maps.NavigationControlStyle.SMALL}
                
            };
            
            var map=new google.maps.Map(document.getElementById("map"),myOptions);
            //console.log(map);
            var input = document.getElementById('search-input');
            var searchBox = new google.maps.places.SearchBox(input);

            // Bias the search box results towards the current map's viewport
      
            map.addListener('bounds_changed', function() {
                
                searchBox.setBounds(map.getBounds());
            
            }); // function ends here

            // Listen for the event when the user selects a prediction from the search box
      
            searchBox.addListener('places_changed', function() {
            
                var places = searchBox.getPlaces();
        
                if (places.length === 0) {
                    
                    return;
                  
                } // if ends here
                
                markers = [];
                
                // For each place, add a marker and center the map on it
                
                var bounds = new google.maps.LatLngBounds();
                
                places.forEach(function(place) {
                    
                if (!place.geometry || !place.geometry.location) {
                    
                    // console.log('Returned place contains no geometry');
                    return;
                    
                } // if ends here
                  
                var marker = new google.maps.Marker({
                    map: map,
                    title: place.name,
                    position: place.geometry.location
                    
                }); // marker ends here
                
                markers.push(marker);
                bounds.extend(place.geometry.location);
              
            }); // function ends here
    
            // Fit the map to the bounds of the markers
            
            map.fitBounds(bounds);
            map.setZoom(18);
            var markers = [];
     
            }); // function ends here 
      
        var drawingManager = new google.maps.drawing.DrawingManager({
        drawingMode: google.maps.drawing.OverlayType.POLYGON,
        drawingControl: true,
        drawingControlOptions: {
        position: google.maps.ControlPosition.TOP_CENTER,
        drawingModes: [
            google.maps.drawing.OverlayType.POLYGON,
            // google.maps.drawing.OverlayType.POLYLINE,
            // google.maps.drawing.OverlayType.CIRCLE,
            // google.maps.drawing.OverlayType.RECTANGLE
          ]
        }, // drawingControlOptions ends here
        polygonOptions: {
            
          editable: true,
          draggable: true
          
        } // polygonOptions ends here
        
      }); // drawingManager ends here
      
      // Set the drawing manager on the map
      
      drawingManager.setMap(map);

    // Add an event listener for when an overlay is completed
    
    //   google.maps.event.addListener(drawingManager, 'overlaycomplete', function(event) {
    //     var overlay = event.overlay;
    //     if (event.type === google.maps.drawing.OverlayType.POLYGON) {
    //       console.log('Polygon overlay created', overlay.getPath());
    //     } else if (event.type === google.maps.drawing.OverlayType.POLYLINE) {
    //       console.log('Polyline overlay created', overlay.getPath().getArray());
    //     } else if (event.type === google.maps.drawing.OverlayType.CIRCLE) {
    //       console.log('Circle overlay created', overlay.getRadius());
    //     } else if (event.type === google.maps.drawing.OverlayType.RECTANGLE) {
    //       console.log('Rectangle overlay created', overlay.getBounds().toJSON());
    //     }
    //   });
       
    //    
        
    google.maps.event.addListener(drawingManager, "polygoncomplete", function (
          
        drawnPolygon
          
    ) // function ends here 
        
        {
          polygon = drawnPolygon;

          // Get the coordinates of the polygon
          
            var polygonCoordinates = polygon
            .getPath()
            .getArray()
            .map(function (coord) {
                return {
                    lat: coord.lat(),
                    lng: coord.lng(),
                };
            });
            poly="";
            
        for (var i=0;i<polygonCoordinates.length;i++){
            
            poly+=polygonCoordinates[i].lng + " " + polygonCoordinates[i].lat + ",";
            
        } // for loop ends here
        
        $('#myModal').modal('show');
        
            // console.log("Polygon Coordinates:", poly.substr(0,poly.length-1));
            // console.log("Polygon Coordinates:", polygonCoordinates[0]);
        
        var iframe = document.getElementById('iframe');
        var iframeDocument = iframe.contentDocument || iframe.contentWindow.document;
        var iframeElement = iframeDocument.getElementById('text_area');
        iframeElement.value = poly.substr(0,poly.length-1);
        
        });
            var marker=new google.maps.Marker({position:latlon,map:map,title:"You are here!"});
            var Latlong=position.coords.latitude+','+position.coords.longitude;
            geoLoc.clearWatch(watchId);
            
        }
        
    }// end success
    
    function error(error) {
        
        switch(error.code) {
            
            case error.PERMISSION_DENIED:
                alert("As you have denied the request for Geolocation. So you will not be able to checkin/checkout");
                document.getElementById("mapholder").innerHTML="Map Loading not possible as you have denied the access for Geolocation.Please allow Geolocation access. Please see this video to see the process of allowing gelocation. If you are not able to resolve please contact your admin";
                document.getElementById("checkin").innerHTML="Checkin Disabled";
                document.getElementById("checkin").setAttribute("class","btn btn-warning");
                document.getElementById("checkin").disable=True;
              
                break;
                
            case error.POSITION_UNAVAILABLE:
                
                alert("Location information is unavailable.");
                break;
              
            case error.TIMEOUT:
                
                alert("The request to get user location timed out.");
                break;
                
            case error.UNKNOWN_ERROR:
                
                alert("An unknown error occurred.");
                break;
              
        } // switch ends here
    } // function ends here
        
    function hideModal(){
        
        $('#myModal').modal('hide');
        
    } // function ends here
    
    function checkAndMarkChecked(){
        
        var allCheckBox=document.getElementById('allCheckBox');
        
        if(allCheckBox.checked === true){
            
            const checkboxes = document.querySelectorAll('input[class="checkbox_two"]'); // Get all checkboxes on the page
            
            checkboxes.forEach((checkbox) => { // Iterate over each checkbox and set its checked property to true
            checkbox.checked = true;
            
            }); // change the value of check box
            
        } // if ends here
        
        else {
            
            const checkboxes = document.querySelectorAll('input[class="checkbox_two"]'); // Get all checkboxes on the page
        
            checkboxes.forEach((checkbox) => { // Iterate over each checkbox and set its checked property to true
            checkbox.checked = false;
            
            }); // change the value of check box
            
        } // else ends here
    
    } // function ends here    
    
    // Display of Table Data

    frappe.ready(() => {
        
        frappe.call({method:'multiple_geofences_report',
        
            callback : function(res){
                
            // console.log(res);
            var tbody = document.getElementById("attendance_request");
            tbody.innerHTML=" ";
            var url=`/api/resource/Employee/?filters=[["status","=","Active"]]&fields=["employee","employee_name","department","designation","company","default_shift","branch","holiday_list","date_of_joining","status"]&limit_page_length=None`;

            fetch(url).then((r)=>r.json()).then((js)=>{//console.log(js);
        
            for (var i=0; i<js.data.length;i++){
                
                var item=js.data[i];
                var row = tbody.insertRow();
                
                // create checkbox
            
                var cell0=row.insertCell();
                var x = document.createElement("INPUT");
                x.setAttribute("type", "checkbox");
                x.setAttribute("class", "checkbox_two");
                x.style.height = "15px";
                x.style.border = "1px solid black";
                x.setAttribute("id", item.employee);
                x.value=item.employee;
                cell0.appendChild(x);
                
                // Employee ID
                
                var cell1=row.insertCell();
                cell1.innerHTML=item.employee;
                cell1.style.textAlign='center';
                
                // Employee Name
                
                var cell2=row.insertCell();
                cell2.innerHTML=item.employee_name;
                cell2.style.textAlign='center';
                
                // Geofence Id
                
                var cell2=row.insertCell();
                
                    for (var j=0; j<res.message.length;j++){
                      
                        var item_one=res.message[j];
                        // alert(item_one.employee);
                        if(item.employee==item_one.employee){
                            
                            cell2.innerHTML=item_one.geofenceid;
                            cell2.style.textAlign='center';
        
                            
                        } // if ends here
                    
                    } // for looop ends here
                
                // Department
                
                var cell4=row.insertCell();
                cell4.innerHTML=item.department;
                cell4.style.textAlign='center';
                
                // Branch
                
                var cell3=row.insertCell();
                cell3.innerHTML=item.branch;
                cell3.style.textAlign='center';
            
        } // for loop ends here
        
        $.getScript("https://cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js",()=>{
        $.getScript("https://cdn.datatables.net/1.13.2/js/dataTables.bootstrap5.min.js",()=>{
        var count=0;
        $('#attendance_request_table tfoot th').each(function () {
            // console.log($(this));
            count++;
            // console.log(count);
            if(count==1){
                
                // $(this).style.width="10px";
                
            } // if ends here
            
            else{
                
                var title = $(this).text();
                $(this).html('<input type="text" class="text-center" placeholder=" ' + title + '" />');
                
            } // else ends here
        }); // function ends here
        //console.log($('#attendance_history_table'));
        atable = $('#attendance_request_table').DataTable({
            //paging:false,
            iDisplayLength: -1,
        aLengthMenu: [[ 25, 50,100, -1], [ 25, 50,100, "All"]],
            //pagination:false,
            initComplete: function () {
                
                // Apply the search
                
                this.api()
                    .columns()
                    .every(function () {
                        var that = this;
                        $('input', this.footer()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                
                                that.search(this.value).draw();
                                
                            } // if ends here
                        }); // function ends here
                    }); // function ends here
                    
                    var search = document.getElementById("attendance_request_table_filter");  // Deletion of Search Filter 
                    search.parentNode.removeChild(search);
                    
                    var length = document.getElementById("attendance_request_table_length");  // Deletion of pagination facility
                    length.parentNode.removeChild(length);
                    
                    var paginate = document.getElementById("attendance_request_table_paginate"); // Basic styling of pagination part 02
                    paginate.setAttribute('class','p-t-20 p-b-20');
                    
            }, // function ends here
        }); // DataTable ends here
        }); //end of bootstrap
        }); //end of datatable
        }); // fetch url ends here
        }// end callback function
        });//end frappe.call    
    }); // frappe.ready ends here

    // Assign Geofence

    function approvegeofences() {
        
        const table = document.getElementById("attendance_request_table");
        const applications = table.querySelectorAll('input[class="checkbox_two"]:checked');
        var values = [];
        for (var i = 0; i < applications.length; i++) {
            
            values.push(applications[i].value);
            console.log(values);
            
        } // for loop ends here
        
        frappe.call({method:'multiple_geofences',
        
            args: {doctype:"Employee",
        	        name: values,
        	        geofenceid : $('#search_geofences').val(),
        	        
            }, // args ends here
                
    	    callback : (r)=>{// console.log(r.message);
    	    
    	        AutoRefresh();
    	        
    	    }, // callback ends here
        }); // frappe.call ends here
    } // function ends here

    // AutoRefresh the page
    
    function AutoRefresh(){
        
        setTimeout("location.reload(true);");
        
    } // function ends here

    //  Display of all the geofences

    frappe.ready(() => {
        
        var url=`/api/resource/Geofences/?fields=${JSON.stringify(["*"])}`;
        // console.log(url);
        fetch(url).then((r)=>r.json()).then((js)=>{// console.log(js);
        var dlist = document.getElementById('geofences_lists');
            for (var i=0; i<js.data.length;i++){
                
                var item=js.data[i];
                var el = document.createElement("option");
                el.setAttribute("values",item.name);
                el.innerHTML = item.name;
                dlist.appendChild(el);
                
            } // for loop ends here
        }); // fetch url ends here
    }); // frappe.ready ends here

    // Select the geofence

    function checkvalue(){
        
        var e = document.getElementById("search_geofences");
        var value = e.value;
        console.log(value);
         
        var newTable = document.getElementById('attendance_request_table');
        var rows = newTable.querySelectorAll('tr');
         
        console.log(rows);
        for (var p=2; p<rows.length-1; p++){
            
            let row = rows[p];
            
            row.style.display = '';
            console.log(row.querySelectorAll('td')[3].innerHTML);
            if((row.querySelectorAll('td')[3].innerHTML).includes(value) == true){
                
                console.log(row.querySelectorAll('td')[3].innerHTML);
                row.style.display = 'none';
                
            } // if ends here
             
        } // for loop ends here
        
    } // function ends here
 
    // Beard Crumbs for Add Geofence
 
    function bdfun(){
     
        document.getElementById("bd").innerHTML="Add Geofence";
        
    } // function ends here
    
    // Beard Crumbs for Assign Geofence
    
    function bdfun1(){
        
        document.getElementById("bd").innerHTML="Assign Geofence";
        
    } // function ends here
    
    // Beard Crumbs for Assign Geofence
    
    function bdfun2(){
        
        document.getElementById("bd").innerHTML="Remove Geofence";
        
    } // function ends here
    
    // Show Blank Data from the table
    
    function hideRowsWithBlankCells() {
    
        var table = document.getElementById("attendance_request_table");
        var rows = table.getElementsByTagName("tr");
    
        for (var i = 0; i < rows.length; i++) {
            
            var cells = rows[i].getElementsByTagName("td");
            var hasBlankCell = false;
    
            for (var j = 0; j < cells.length; j++) {
              
                if (cells[3].innerHTML != "") {
                    
                  hasBlankCell = true;
                  break;
                  
                } // if ends here
            
            } // for loop ends here
    
            if (hasBlankCell==true) {
              
                rows[i].style.display = "none";
            
            } // if ends here
          
        } // for loop ends here
    
    } // function ends here
    
    // Switiching between filtering options

    function selectFilter() {
    
        var selectBox = document.getElementById("selectBox");
        var selectedValue = selectBox.options[selectBox.selectedIndex].value;
        
        if(selectedValue=="hideRowsWithBlankCells"){
            
            hideRowsWithBlankCells(); // calling the funtion to show only the blank cells
            selectBox.value="geofence";
    
        } // if ends here
        
        else if (selectedValue == "resetFilters"){
            
            resetFilters(); // calling the funtion to remove all the applied filters
            selectBox.value="geofence";
            
        } // else if ends here
        
    } // function ends here
    
    // Remove All the applied Filters

    function resetFilters() {
        
        var table = document.getElementById("attendance_request_table");
        var rows = table.getElementsByTagName("tr");
    
        for (var i = 1; i < rows.length; i++) {
              
            rows[i].style.display = "";
            
        } // for loop ends here
        
    } // function ends here

    // 

    function filterTable(value) {
        
        var table = document.getElementById("attendance_request_table");
        var rows = table.getElementsByTagName("tr");
    
        for (var i = 1; i < rows.length; i++) {
            
            var cell = rows[i].getElementsByTagName("td")[0];
            var displayStyle = "";
    
            if (value !== "" && cell.innerHTML !== value) {
                
              displayStyle = "none";
              
            } // if ends here
    
            rows[i].style.display = displayStyle;
            
        } // for loop ends here
        
    } // function ends here
    
    // Display of Table Data in Remove Geofence Assignment
    
    // frappe.ready(() => {
        
    //     frappe.call({method:'multiple_geofences_report',
        
    //         callback : function(res){
                
    //         // console.log(res);
    //         var tbody = document.getElementById("remove_geofence_assignment");
    //         tbody.innerHTML=" ";
    //         var url=`/api/resource/Employee/?filters=[["status","=","Active"]]&fields=["employee","employee_name","department","designation","company","default_shift","branch","holiday_list","date_of_joining","status"]&limit_page_length=None`;

    //         fetch(url).then((r)=>r.json()).then((js)=>{//console.log(js);
        
    //         for (var i=0; i<js.data.length;i++){
                
    //             var item=js.data[i];
    //             var row = tbody.insertRow();
                
    //             // create checkbox
            
    //             var cell0=row.insertCell();
    //             var x = document.createElement("INPUT");
    //             x.setAttribute("type", "checkbox");
    //             x.setAttribute("class", "checkbox_two");
    //             x.style.height = "15px";
    //             x.style.border = "1px solid black";
    //             x.setAttribute("id", item.employee);
    //             x.value=item.employee;
    //             cell0.appendChild(x);
    //             cell0.style.borderBottom= "thin solid #00ffff";
                
    //             // Employee ID
                
    //             var cell1=row.insertCell();
    //             cell1.innerHTML=item.employee;
    //             cell1.style.textAlign='center';
    //             cell1.style.borderBottom= "thin solid #00ffff";
                
    //             // Employee Name
                
    //             var cell2=row.insertCell();
    //             cell2.innerHTML=item.employee_name;
    //             cell2.style.textAlign='center';
    //             cell2.style.borderBottom= "thin solid #00ffff";
                
    //             // Geofence Id
                
    //             var cell2=row.insertCell();
                
    //                 for (var j=0; j<res.message.length;j++){
                      
    //                     var item_one=res.message[j];
    //                     // alert(item_one.employee);
    //                     if(item.employee==item_one.employee){
                            
    //                         cell2.innerHTML=item_one.geofenceid;
    //                         cell2.style.textAlign='center';
    //                         cell2.style.borderBottom= "thin solid #00ffff";
                            
    //                     } // if ends here
                    
    //                 } // for looop ends here
                
    //             // Department
                
    //             var cell4=row.insertCell();
    //             cell4.innerHTML=item.department;
    //             cell4.style.textAlign='center';
    //             cell4.style.borderBottom= "thin solid #00ffff";
                
    //             // Branch
                
    //             var cell3=row.insertCell();
    //             cell3.innerHTML=item.branch;
    //             cell3.style.textAlign='center';
    //             cell3.style.borderBottom= "thin solid #00ffff";
            
    //     } // for loop ends here
        
    //     $.getScript("https://cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js",()=>{
    //     $.getScript("https://cdn.datatables.net/1.13.2/js/dataTables.bootstrap5.min.js",()=>{
    //     var count=0;
    //     $('#attendance_request_table_remove tfoot th').each(function () {
    //         // console.log($(this));
    //         count++;
    //         // console.log(count);
    //         if(count==1){
                
    //             // $(this).style.width="10px";
                
    //         } // if ends here
            
    //         else{
                
    //             var title = $(this).text();
    //             $(this).html('<input type="text" class="text-center" placeholder=" ' + title + '" />');
                
    //         } // else ends here
    //     }); // function ends here
    //     //console.log($('#attendance_history_table'));
    //     atable = $('#attendance_request_table_remove').DataTable({
    //         //paging:false,
    //         iDisplayLength: -1,
    //     aLengthMenu: [[ 25, 50,100, -1], [ 25, 50,100, "All"]],
    //         //pagination:false,
    //         initComplete: function () {
    //             // Apply the search
    //             this.api()
    //                 .columns()
    //                 .every(function () {
    //                     var that = this;
    //                     $('input', this.footer()).on('keyup change clear', function () {
    //                         if (that.search() !== this.value) {
                                
    //                             console.log((that.search() !== this.value));
                                
                                
    //                             that.search(this.value).draw();
    //                         }
    //                     });
    //                 });
                    
    //                 var search = document.getElementById("attendance_request_table_remove_filter");  // Deletion of Search Filter 
    //                 search.parentNode.removeChild(search);
                    
    //                 var length = document.getElementById("attendance_request_table_remove_length");  // Deletion of pagination facility
    //                 length.parentNode.removeChild(length);
                    
    //         }, // function ends here
    //     }); // DataTable ends here
    //     // } else { dtable.reload();}
    //     }); //end of bootstrap
    //     }); //end of datatable
    //     }); // fetch url ends here
    //     }// end callback function
    //     });//end frappe.call    
    // }); // frappe.ready ends here
    
    // Select All the Checkboxes for Assignment
    
    function checkAndMarkCheckedRemove(){
        
        var allCheckBox=document.getElementById('allCheckBoxRemove');
        
        if(allCheckBox.checked === true){
            
            const checkboxes = document.querySelectorAll('input[class="checkbox_two"]'); // Get all checkboxes on the page
            
            checkboxes.forEach((checkbox) => { // Iterate over each checkbox and set its checked property to true
            checkbox.checked = true;
            
            }); // change the value of check box
            
        } // if ends here
        
        else {
            
            const checkboxes = document.querySelectorAll('input[class="checkbox_two"]'); // Get all checkboxes on the page
        
            checkboxes.forEach((checkbox) => { // Iterate over each checkbox and set its checked property to true
            checkbox.checked = false;
            
            }); // change the value of check box
            
        } // else ends here
        
    } // function ends here    
    
    // Select All the Checkboxes for Remove
    
    function checkAndMarkCheckedRemoveOne(){
        
        var allCheckBoxOne=document.getElementById('allCheckBoxRemoveOne');
        
        if(allCheckBoxOne.checked === true){
            
            const checkboxes = document.querySelectorAll('input[class="checkbox_t"]'); // Get all checkboxes on the page
            
            checkboxes.forEach((checkbox) => { // Iterate over each checkbox and set its checked property to true
            checkbox.checked = true;
            
            }); // change the value of check box
            
        } // if ends here
        
        else {
            
            const checkboxes = document.querySelectorAll('input[class="checkbox_t"]'); // Get all checkboxes on the page
        
            checkboxes.forEach((checkbox) => { // Iterate over each checkbox and set its checked property to true
            checkbox.checked = false;
            
            }); // change the value of check box
            
        } // else ends here
        
    } // function ends here    
    
    // Select the geofence for removal

    function checkvalueRemove(){
        
        var e = document.getElementById("search_geofences_remove");
        var value = e.value;
        var text = e.options[e.selectedIndex].text;
        // console.log(text);
        
    } // function ends here
    
    //  Display of all the geofences for removal

    frappe.ready(() => {
        
        var url=`/api/resource/Geofences/?fields=${JSON.stringify(["*"])}`;
        // console.log(url);
        fetch(url).then((r)=>r.json()).then((js)=>{// console.log(js);
        var dlist = document.getElementById('geofences_lists_remove');
            for (var i=0; i<js.data.length;i++){
                
                var item=js.data[i];
                var el = document.createElement("option");
                el.setAttribute("values",item.name);
                el.innerHTML = item.name;
                dlist.appendChild(el);
                
            } // for loop ends here
        }); // fetch url ends here
    }); // frappe.ready ends here
    
    // Show data on selection of Geo fence version one
    
    // var stable=null;
    
    // function removeOfGeofence(val){
        
    //     if (stable!==null){
        
    //         stable.destroy();
            
    //     }
    
    //     frappe.call({method:'multiple_geofence_removal',
                
    //         args: {
    //         	   //geofenceid : $('#search_geofences_remove').val(),
            	   
    //         	   geofenceid: val,
            	   
    //     	    }, // args ends here
        	    
    //     	callback : (res)=>{ console.log(res.message);
                
    //         var tbody = document.getElementById("remove_geofence_assignment");
            
    //         tbody.innerHTML=" ";
            
    //         for (var i=0; i<res.message.length;i++){
                
    //             var item=res.message[i];
    //             var row = tbody.insertRow();
                
    //             // create checkbox
            
    //             var cell0=row.insertCell();
    //             var x = document.createElement("INPUT");
    //             x.setAttribute("type", "checkbox");
    //             x.setAttribute("class", "checkbox_two");
    //             x.style.height = "15px";
    //             x.style.border = "1px solid black";
    //             x.setAttribute("id", item.employee);
    //             x.value=item.employee;
    //             cell0.appendChild(x);
    //             cell0.style.borderBottom= "thin solid #00ffff";
                
    //             // Employee ID
                
    //             var cell1=row.insertCell();
    //             cell1.innerHTML=item.employee;
    //             cell1.style.textAlign='center';
    //             cell1.style.borderBottom= "thin solid #00ffff";
                
    //             // Employee Name
                
    //             var cell2=row.insertCell();
    //             cell2.innerHTML=item.employee_name;
    //             cell2.style.textAlign='center';
    //             cell2.style.borderBottom= "thin solid #00ffff";
                
    //             // Geofence Id
                
    //             var cell3=row.insertCell();
    //             cell3.innerHTML=item.geofenceid;
    //             cell3.style.textAlign='center';
    //             cell3.style.borderBottom= "thin solid #00ffff";
                            
    //             // Department
                
    //             var cell4=row.insertCell();
    //             cell4.innerHTML=item.department;
    //             cell4.style.textAlign='center';
    //             cell4.style.borderBottom= "thin solid #00ffff";
                
    //             // Branch
                
    //             var cell5=row.insertCell();
    //             cell5.innerHTML=item.branch;
    //             cell5.style.textAlign='center';
    //             cell5.style.borderBottom= "thin solid #00ffff";
            
    //     } // for loop ends here
        
    //     $.getScript("https://cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js",()=>{
    //     $.getScript("https://cdn.datatables.net/1.13.2/js/dataTables.bootstrap5.min.js",()=>{
    //     var count=0;
    //     $('#attendance_request_table_remove tfoot th').each(function () {
    //         // console.log($(this));
    //         count++;
    //         // console.log(count);
    //         if(count==1){
                
    //             // $(this).style.width="10px";
                
    //         } // if ends here
            
    //         else{
                
    //             var title = $(this).text();
    //             $(this).html('<input type="text" class="text-center" placeholder=" ' + title + '" />');
                
    //         } // else ends here
    //     }); // function ends here
    //     //console.log($('#attendance_history_table'));
    //     stable = $('#attendance_request_table_remove').DataTable({
    //     paging:false,
    //     iDisplayLength: -1,
    //     aLengthMenu: [[ 25, 50,100, -1], [ 25, 50,100, "All"]],
    //         //pagination:false,
    //         initComplete: function () {
    //             // Apply the search
    //             this.api()
    //                 .columns()
    //                 .every(function () {
    //                     var that = this;
    //                     $('input', this.footer()).on('keyup change clear', function () {
    //                         if (that.search() !== this.value) {
    //                             that.search(this.value).draw();
    //                         }
    //                     });
    //                 });
                    
    //                 var search = document.getElementById("attendance_request_table_remove_filter");  // Deletion of Search Filter 
    //                 search.parentNode.removeChild(search);
                    
    //                 var length = document.getElementById("attendance_request_table_remove_length");  // Deletion of pagination facility
    //                 length.parentNode.removeChild(length);
                    
    //                 var previous = document.getElementById("attendance_request_table_remove_previous");  // Deletion of pagination facility
    //                 previous.parentNode.removeChild(previous);
                    
    //         }, // function ends here
    //     }); // DataTable ends here
    //     }); //end of bootstrap
    //     }); //end of datatable
    //     }// end callback function
    //     }); // frappe.call ends here
    
    // } // function ends here
    
   // Display of Table Data in Remove Geofence Assignment
    
    //   frappe.ready(() => {
           
    //         removeOfGeofence("All");
           
    //   });
   
    // Show data on selection of Geo fence version two
   
    var dtable=null;
    
    function removeOfGeofence(val) {
       
        if (dtable!==null){
            
            dtable.destroy();
            
        } // if ends here
    
        var fval = val;
        
        frappe.call({
            
            method: 'multiple_geofence_removal',
        
            callback: function(res) { // console.log(res.message);
            
                var tbody = document.getElementById("remove_geofence_assignment");
                
                tbody.innerHTML=" ";
                
                var check_val = false;
    
                var url=`/api/resource/Employee/?filters=[["status","=","Active"]]&fields=["employee","employee_name","department","designation","company","default_shift","branch","holiday_list","date_of_joining","status"]&limit_page_length=None`;
    
                fetch(url).then((r)=>r.json()).then((js)=>{//console.log(js);
            
                for (var j=0; j<js.data.length;j++){
                
                    var item_one = js.data[j];
                    
                        for (var i = 0; i < res.message.length; i++) {
                            
                            var item = res.message[i];
                            
                            if(item_one.employee == item.employee){
                                
                                var text = item.geofenceid;
                                // console.log(fval);
                                // console.log(text);
                                
                                if(text!=null){
                                    
                                    check_val = text.includes(fval);
                                    // console.log(check_val);
                                    
                                    if(check_val===true){
        
                                        var row = tbody.insertRow();
                                    
                                        // create checkbox
                                    
                                        var cell0=row.insertCell();
                                        var x = document.createElement("INPUT");
                                        x.setAttribute("type", "checkbox");
                                        x.setAttribute("class", "checkbox_t");
                                        x.style.height = "15px";
                                        x.style.border = "1px solid black";
                                        x.setAttribute("id", item.employee);
                                        x.value=item.employee;
                                        cell0.appendChild(x);
                                        
                                        // Employee ID
                                        
                                        var cell1=row.insertCell();
                                        cell1.innerHTML=item.employee;
                                        cell1.style.textAlign='center';
                                        
                                        // Employee Name
                                        
                                        var cell2=row.insertCell();
                                        cell2.innerHTML=item.employee_name;
                                        cell2.style.textAlign='center';
                                        
                                        // Geofence Id
                                        
                                        var cell3=row.insertCell();
                                        cell3.innerHTML=item.geofenceid;
                                        cell3.style.textAlign='center';
                                                    
                                        // Department
                                        
                                        var cell4=row.insertCell();
                                        cell4.innerHTML=item.department;
                                        cell4.style.textAlign='center';
                                        
                                        // Branch
                                        
                                        var cell5=row.insertCell();
                                        cell5.innerHTML=item.branch;
                                        cell5.style.textAlign='center';
        
                                    } // if ends here
                            
                                } // if ends here
                            
                                else{
                                    
                                    continue;
                                    
                                } // else ends here 
                            
                            } // if ends here
                            
                        } // for loop for i ends here
                    
                } // for loop j ends here
    
        $.getScript("https://cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js",()=>{
        $.getScript("https://cdn.datatables.net/1.13.2/js/dataTables.bootstrap5.min.js",()=>{
        $('#attendance_request_table_remove tfoot th').each(function () {
            
            var title = $(this).text();
            $(this).html('<input type="text" class="text-center" placeholder=" ' + title + '" />');
            
        }); // function ends here
        
        //console.log($('#attendance_history_table'));
        dtable = $('#attendance_request_table_remove').DataTable({
            //paging:false,
            iDisplayLength: 25,
        aLengthMenu: [[ 25, 50,100, -1], [ 25, 50,100, "All"]],
            //pagination:false,
            initComplete: function () {
                
                // Apply the search
                
                this.api()
                    .columns()
                    .every(function () {
                        var that = this;
                        $('input', this.footer()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                
                                that.search(this.value).draw();
                                
                            } // if ends here
                            
                        }); // function ends here
                        
                    }); // function ends here
                    
                    var search = document.getElementById("attendance_request_table_remove_filter"); // Deletion of Search Filter 
                    search.parentNode.removeChild(search);
                    
                    var length = document.getElementById("attendance_request_table_remove_length"); // Deletion of Pagination Part 01        
                    length.parentNode.removeChild(length);
                
            }, // initComplete ends here
        }); // DataTable ends here
        }); //end of bootstrap
        }); //end of datatable
        }); // fetch url ends here
        }   // end callback function
        }); //end frappe.call
        }   // function ends here
    
    // Display of data in remove geofence assignment table
    
    frappe.ready(() => {
       
        if (dtable!==null){
            
            dtable.destroy();
            
        } // if ends here
        
        frappe.call({
            
            method: 'multiple_geofence_removal',
        
            callback: function(res) {// console.log(res.message);
                
                var tbody = document.getElementById("remove_geofence_assignment");
                
                tbody.innerHTML=" ";
                
                var url=`/api/resource/Employee/?filters=[["status","=","Active"]]&fields=["employee","employee_name","department","designation","company","default_shift","branch","holiday_list","date_of_joining","status"]&limit_page_length=None`;
    
                fetch(url).then((r)=>r.json()).then((js)=>{//console.log(js);
            
                for (var j=0; j<js.data.length;j++){
                
                    var item_one = js.data[j];
                    
                        for (var i = 0; i < res.message.length; i++) {
                            
                            var item = res.message[i];
                            
                            if(item_one.employee == item.employee){
                        
                                var row = tbody.insertRow();
            
                                // create checkbox
                            
                                var cell0=row.insertCell();
                                var x = document.createElement("INPUT");
                                x.setAttribute("type", "checkbox");
                                x.setAttribute("class", "checkbox_t");
                                x.style.height = "15px";
                                x.style.border = "1px solid black";
                                x.setAttribute("id", item.employee);
                                x.value=item.employee;
                                cell0.appendChild(x);
                                
                                // Employee ID
                                
                                var cell1=row.insertCell();
                                cell1.innerHTML=item.employee;
                                cell1.style.textAlign='center';
                                
                                // Employee Name
                                
                                var cell2=row.insertCell();
                                cell2.innerHTML=item.employee_name;
                                cell2.style.textAlign='center';
                                
                                // Geofence Id
                                
                                var cell3=row.insertCell();
                                cell3.innerHTML=item.geofenceid;
                                cell3.style.textAlign='center';
                                 
                                // Department
                                
                                var cell4=row.insertCell();
                                cell4.innerHTML=item.department;
                                cell4.style.textAlign='center';
                                
                                // Branch
                                
                                var cell5=row.insertCell();
                                cell5.innerHTML=item.branch;
                                cell5.style.textAlign='center';
                                
                            } // if ends here
                                
                        } //for loop ends here
                
                }  // for loop ends here
    
        $.getScript("https://cdn.datatables.net/1.13.2/js/jquery.dataTables.min.js",()=>{
        $.getScript("https://cdn.datatables.net/1.13.2/js/dataTables.bootstrap5.min.js",()=>{
        var count=0;
        $('#attendance_request_table_remove tfoot th').each(function () {
            count++;

            if(count==1){
                
                // $(this).style.width="10px";
                
            }//if ends here
            
            else{
                
                var title = $(this).text();
                $(this).html('<input type="text" class="text-center" placeholder=" ' + title + '" />');
                
            }//else ends here
    
        }); // function ends here
        
        dtable = $('#attendance_request_table_remove').DataTable({
            //paging:false,
            iDisplayLength: 25,
        aLengthMenu: [[ 25, 50,100, -1], [ 25, 50,100, "All"]],
            //pagination:false,
            initComplete: function () {
                // Apply the search
                this.api()
                    .columns()
                    .every(function () {
                        var that = this;
                        $('input', this.footer()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                
                                that.search(this.value).draw();
                                
                            } // if ends here
                            
                        }); // function ends here
                        
                    }); // function ends here
                    
                    var search = document.getElementById("attendance_request_table_remove_filter");                      // Deletion of Search Filter 
                    search.parentNode.removeChild(search);
                    
                    var length = document.getElementById("attendance_request_table_remove_length");                      // Deletion of Pagination Part 01        
                    length.parentNode.removeChild(length);
                    
                    var paginate_remove = document.getElementById("attendance_request_table_remove_paginate");           // Basic styling of pagination part 02
                    paginate_remove.setAttribute('class','p-t-20 p-b-20');
                    
            }, // initComplete: function ends here
            
        }); // DataTable ends here
        }); //end of bootstrap
        }); //end of datatable
        }); // fetch(url) ends here
        }   // end callback function
        }); //end frappe.call
   }); // frappe.ready ends here
  
   // Remove Geofences

    function removeGeofences() {
        
        const table = document.getElementById("attendance_request_table_remove");
        const applications = table.querySelectorAll('input[class="checkbox_t"]:checked');
        var values = [];
        for (var i = 0; i < applications.length; i++) {
            
            values.push(applications[i].value);
            // console.log(values);
            
        } // for loop ends here
        
        for (var i = 0; i < values.length; i++) {

            frappe.call({method:'gewin_payroll.api.delete_geofence_assignment',
            
                args: {
                	   employee: values[i],
                	   geofenceid : $('#search_geofences_remove').val(),
            	    }, // args ends here
            	     
            	callback : (r)=>{ // console.log(r.message);
                    
                    AutoRefresh();
                    
            	}, // callback ends here
            }); // frappe.call ends here
        } // for loop ends here    
    } // function ends here
    
    // Download Employee Checklist Table

    function changeFunc_one() {
        
        var selectBoxOne = document.getElementById("selectBox_one");
        var selectedValueOne = selectBoxOne.options[selectBoxOne.selectedIndex].value;

        if(selectedValueOne=="exportToExcel_one"){
            
          exportToExcel_one(); // calling the funtion to download the report in excel format
          
        } // else ends here
        
        else if(selectedValueOne=="downloadCSV_one"){
            
            downloadCSV_one(); // calling the funtion to download the report in csv format
            
        } // else ends here
        
        else if(selectedValueOne=="exportToPDF_one"){
            
            exportToPDF_one(); // calling the funtion to download the report in pdf format
            
        } // else ends here
        
    } // function ends here 
    
    //  Download in Excel for employee checklist table

    function exportToExcel_one() {
        
        // createNewTable_one() // calling the function to generate a new table
        
        var table = document.getElementById("attendance_request_table");
        var workbook = XLSX.utils.table_to_book(table, {sheet:"Sheet 1"});
        var excelBuffer = XLSX.write(workbook, {bookType:'xlsx', type:'array'});
        saveAsExcel_one(excelBuffer, "assigned_geofences.xlsx");
        
    } // function ends here

    function saveAsExcel_one(buffer, filename) {
        
        var blob = new Blob([buffer], {type: 'application/octet-stream'});
        var url = window.URL.createObjectURL(blob);
        var link = document.createElement('a');
        link.href = url;
        link.setAttribute('download', filename);
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
        
    } // function ends here
    
   //  Download in CSV

    function downloadCSV_one() {
        
        // Get the table data
        
        var tableOne = document.querySelector('table[id="attendance_request_table"]');
        
        // console.log(document.querySelectorAll('table')[0]);
        
        const rows = tableOne.querySelectorAll('tr');

        // Build the CSV data
        
        let csv = '';
        
        for (let i = 0; i < rows.length; i++) {
            
            var cells = rows[i].querySelectorAll('td');
            
            if (cells.length===0){
                
                cells = rows[i].querySelectorAll('th');
                
            } // if ends here
        
          let row = '';
          
            if (rows[i].style.display!="none"){
              
                for (let j = 0; j < cells.length; j++) {
                  
                    row += cells[j].textContent.replaceAll(",","|") + ',';
                
                } // for loop ends here
            
            csv += row + '\r\n';
          
            } // if ends here
          
        } // for loop ends here

        // Download the CSV file
        
        const link = document.createElement('a');
        link.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(csv));
        link.setAttribute('download', 'assigned_geofences.csv');
        link.click();
        
    } // function ends here  
    
    // Download in PDF
    
    function exportToPDF_one(){
        
        var month_value = document.getElementById('holiday_list_table').value
        
        $.getScript("https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.min.js",()=>{ // calling the cdn for jsPDF
        $.getScript("https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.6/jspdf.plugin.autotable.min.js",()=>{ // calling the cdn for autotable
        
        var doc = new jsPDF('L', 'pt', 'letter');  
        var htmlstring = '';  
        var tempVarToCheckPageHeight = 0;  
        var pageHeight = 0;  
        pageHeight = doc.internal.pageSize.height; 
        pageHeight = 2000; 
        
        specialElementHandlers = {  
            
            '#bypassme': function(element, renderer) {  
        
                return true  
                
            } // function ends here
            
        }; // Special Element Handler ends here
        
        margins = {  
            
            top: 150,
            width: 1000 
            
        };  // Margin ends here
        
        var y = 20;  var x= 1800;
        doc.setLineWidth(0.5);
        
        // Addition the first page heading
        
        doc.setFontSize(14);
        doc.text(360, y = y + 20, "Holiday List");

        // Addition the second page heading
        
        doc.setFontSize(12);
        doc.text(335, y = y + 20, "Company : GewinnsHR");
        
        doc.autoTable({  
            
            html: '#attendance_request_table',  
            startY: 70,
            theme: 'plain',
            fontSize: 10,

            didParseCell: function (data) {
                
                data.cell.styles.lineColor = [0, 0, 0];  // Set border color
                data.cell.styles.lineWidth = 0.1;        // Set the border width
                
                var row = data.row.index;
                var column = data.column.index;
            
                // Check if it's a heading cell
                data.cell.styles.halign = 'center';
                // data.cell.styles.fillColor = '#D3D3D3';
                data.cell.styles.fontSize = 8;
                    
            
            }, // didParseCell ends here
            
            columnStyles: {
            
                0: { cellWidth: 220 },
                1: { cellWidth: 220 },
                2: { cellWidth: 265 }
                
            }, // column style ends here
                
            styles: {  
                
                minCellHeight: 10,  // set the minimum cell height
            
            },  // styles end here
            
        })  // doc.autotable ends here
        
        // Add a footer to each page
        
        var pageCount = doc.internal.getNumberOfPages();
        
        var currentD = moment().format("DD/MM/YYYY hh:mm:ss a")
        
        for (var i = 1; i <= pageCount; i++) {
            
            doc.setPage(i);
            
            var footerText = "Report Generated on : " + currentD;
            
            // var textX = 30;                                       // left Aligned
            // var textY = doc.internal.pageSize.getHeight() - 35;   // 20 pixels from the bottom
        
            var textWidth = doc.getStringUnitWidth(footerText) * doc.internal.getFontSize();
        
            var textX = doc.internal.pageSize.getWidth() - textWidth - 20; // Aligned to the right margin with a 20-pixel padding
        
            var textY = doc.internal.pageSize.getHeight() - 35; // 20 pixels from the bottom
        
            doc.setFontSize(10);
        
            doc.text(footerText, textX, textY);
            
        } // for loop ends here
        
        // Add outline border to the entire document
        
            var pageCount = doc.internal.getNumberOfPages();
            
            for (var i = 0; i < pageCount; i++) {
                
                doc.setPage(i);
                
                doc.rect(20, 20, doc.internal.pageSize.getWidth() - 40, doc.internal.pageSize.getHeight() - 40, 'S');
                
            } // for loop ends here

        doc.save('assigned_geofences.pdf'); // Save the report in pdf format
    
        }); // end of jspdf.min.js
        }); // jspdf.plugin.autotable.min.js
        
    } // function ends here 
    