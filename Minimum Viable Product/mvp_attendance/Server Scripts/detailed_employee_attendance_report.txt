# eid=frappe.db.get_value('Employee', {'user_id': frappe.session.user}, ['name'])
# eid = frappe.db.sql("""select name from `tabEmployee` where user_id = %s""",(frappe.session.user),as_dict=1)
#frappe.msgprint(args["fromdate"]);
data=frappe.db.sql("""SELECT
        a.employee as Employee, 
        a.employee_name as EmployeeName, 
        Date(b.time) as WorkDate,
        MONTHNAME(Date(b.time)) as Month,
        cast(TIME(min(b.time)) as time(0)) as FirstIn,
        IF(Date(b.time)=CURDATE(),' ',IF(TIMEDIFF(max(b.time),min(b.time))=0,'Missed',cast(TIME(max(b.time)) as time(0)) )) as LastOut,
        IF(TIMEDIFF(min(b.time),shift_start)>0,cast(TIMEDIFF(min(b.time),shift_start) as time(0)),' ') as LateIn,
        IF(Date(b.time)=CURDATE(),' ',IF(TIMEDIFF(shift_end,max(b.time))>0,cast(TIMEDIFF(shift_end,max(b.time)) as time(0)),' ')) as EarlyOut,
        IF(TIMEDIFF(max(b.time),min(b.time))=0,' ',cast(TIMEDIFF(max(b.time),min(b.time)) as time(0))) as duration,
        IF(Date(b.time)=CURDATE(),' ',IF(((HOUR(TIMEDIFF(max(b.time),min(b.time))) * 3600) + (MINUTE(TIMEDIFF(max(b.time),min(b.time))) * 60) + SECOND(TIMEDIFF(max(b.time),min(b.time)))-(c.working_hours_threshold_for_absent * 3600))< 0,'Absent',IF(((HOUR(TIMEDIFF(max(b.time),min(b.time))) * 3600) + (MINUTE(TIMEDIFF(max(b.time),min(b.time))) * 60) + SECOND(TIMEDIFF(max(b.time),min(b.time)))-(c.working_hours_threshold_for_absent * 3600))> 0 AND ((HOUR(TIMEDIFF(max(b.time),min(b.time))) * 3600) + (MINUTE(TIMEDIFF(max(b.time),min(b.time))) * 60) + SECOND(TIMEDIFF(max(b.time),min(b.time)))-(c.working_hours_threshold_for_half_day * 3600))< 0,'Half Day','Present'))) as Status,
        SUBSTRING_INDEX(SUBSTRING_INDEX(b.device_id,':',2),':',-1) as Location
        FROM
        `tabEmployee` as a
        INNER JOIN `tabEmployee Checkin` as b
        ON a.employee = b.employee
        INNER JOIN `tabShift Type` as c
        ON a.default_shift = c.name
        WHERE Date(b.time)>= %s and Date(time)<= %s
        GROUP BY
        Date(b.time) DESC, a.employee ASC 
        ORDER BY Date(b.time) DESC, a.employee ASC; """,(args["fromdate"],args["todate"]),as_dict=True)

frappe.response["message"]=data