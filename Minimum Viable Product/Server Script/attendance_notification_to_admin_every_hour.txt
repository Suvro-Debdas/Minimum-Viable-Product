𝐏𝐮𝐫𝐩𝐨𝐬𝐞 : 𝐓𝐡𝐢𝐬 𝐬𝐞𝐫𝐯𝐞𝐫 𝐬𝐜𝐫𝐢𝐩𝐭 𝐢𝐬 𝐰𝐫𝐢𝐭𝐭𝐞𝐧 𝐟𝐨𝐫 𝐬𝐞𝐧𝐝𝐢𝐧𝐠 𝐧𝐨𝐭𝐢𝐟𝐢𝐜𝐚𝐭𝐢𝐨𝐧 𝐭𝐨 𝐭𝐡𝐞 "𝐑𝐞𝐩𝐨𝐫𝐭𝐬 𝐭𝐨" 𝐫𝐞𝐠𝐚𝐫𝐝𝐢𝐧𝐠 𝐡𝐢𝐬/𝐡𝐞𝐫 𝐫𝐞𝐩𝐨𝐫𝐭𝐞𝐞'𝐬 𝐝𝐚𝐢𝐥𝐲 𝐚𝐭𝐭𝐞𝐧𝐝𝐚𝐧𝐜𝐞 𝐚𝐥𝐨𝐧𝐠 𝐰𝐢𝐭𝐡 𝐭𝐡𝐞 𝐥𝐢𝐬𝐭 𝐨𝐟 𝐮𝐧𝐦𝐚𝐫𝐤𝐞𝐝 𝐯𝐚𝐥𝐮𝐞𝐬 𝐣𝐮𝐬𝐭 𝐚𝐟𝐭𝐞𝐫 𝐟𝐢𝐯𝐞 𝐚𝐧𝐝 𝐭𝐡𝐢𝐫𝐭𝐲 𝐟𝐢𝐯𝐞 𝐦𝐢𝐧𝐮𝐭𝐞𝐬 𝐚𝐟𝐭𝐞𝐫 𝐭𝐡𝐞 
𝐬𝐡𝐢𝐟𝐭 𝐬𝐭𝐚𝐫𝐭𝐬. (𝐓𝐡𝐞 𝐯𝐚𝐥𝐮𝐞 𝐟𝐨𝐫 𝐭𝐫𝐢𝐠𝐠𝐞𝐫𝐢𝐧𝐠 𝐭𝐡𝐞 𝐧𝐨𝐭𝐢𝐟𝐢𝐜𝐚𝐭𝐢𝐨𝐧, 𝐢𝐬 𝐚 𝐡𝐚𝐫𝐝𝐜𝐨𝐝𝐞𝐝 𝐯𝐚𝐥𝐮𝐞).

𝗘𝘅𝗮𝗺𝗽𝗹𝗲: 𝐈𝐧𝐯𝐢𝐜𝐭𝐮𝐬 𝐌𝐢𝐧𝐝𝐬 𝐏𝐯𝐭 𝐋𝐭𝐝 
	 𝐓𝐨𝐝𝐚𝐲'𝐬 𝐀𝐭𝐭𝐞𝐧𝐝𝐚𝐧𝐜𝐞 𝐑𝐞𝐩𝐨𝐫𝐭
	 	  ⏱️𝐒𝟐 𝟏𝟎:𝟑𝟎 - 𝟏𝟗:𝟎𝟎 
	      𝐌𝐚𝐫𝐤𝐞𝐝 - 𝟏𝟎
	      𝐔𝐧𝐦𝐚𝐫𝐤𝐞𝐝 - 𝟓 
	      𝐎𝐮𝐭 𝐨𝐟 - 𝟏𝟓 
	      𝐟𝐨𝐫 𝐝𝐞𝐭𝐚𝐢𝐥𝐬, 𝐬𝐞𝐞 𝐛𝐞𝐥𝐨𝐰 👇

	𝐔𝐩𝐝𝐚𝐭𝐞 𝐨𝐧 : 𝟎𝟑:𝟎𝟎:𝟓𝟏 
	𝐍𝐨 𝐚𝐭𝐭𝐞𝐧𝐝𝐚𝐧𝐜𝐞 𝐡𝐚𝐬 𝐛𝐞𝐞𝐧 𝐦𝐚𝐫𝐤𝐞𝐝 𝐨𝐧 𝟐𝟓-𝟎𝟗-𝟐𝟎𝟐𝟑 𝐟𝐨𝐫- 
	𝐁𝐮𝐬𝐢𝐧𝐞𝐬𝐬 𝐃𝐞𝐯𝐞𝐥𝐨𝐩𝐦𝐞𝐧𝐭 - 𝐈𝐌𝐏𝐋 
	𝟏. 𝐄𝐌𝐏/𝟐𝟐/𝟎𝟎𝟎𝟕 - 𝐒𝐮𝐯𝐚𝐣𝐢𝐭 𝐒𝐚𝐡𝐚 
	𝟐. 𝐄𝐌𝐏/𝟐𝟐/𝟎𝟎𝟏𝟒 - 𝐒𝐮𝐛𝐫𝐨𝐭𝐨 𝐃𝐚𝐬 
	𝐓𝐞𝐜𝐡𝐧𝐨𝐥𝐨𝐠𝐲 𝐇𝐮𝐛 - 𝐈𝐌𝐏𝐋 
 		  𝟏. 𝐄𝐌𝐏/𝟐𝟐/𝟎𝟎𝟏𝟑 - 𝐒𝐚𝐧𝐣𝐚𝐲 𝐊𝐮𝐦𝐚𝐫 𝐒𝐢𝐧𝐠𝐡 
 	     𝟐. 𝐄𝐌𝐏/𝟐𝟑/𝟎𝟎𝟎𝟕 - 𝐊𝐮𝐦𝐚𝐫𝐞𝐬𝐡 𝐌𝐮𝐝𝐥𝐢𝐲𝐚𝐫 
	𝐌𝐚𝐧𝐚𝐠𝐞𝐦𝐞𝐧𝐭 - 𝐈𝐌𝐏𝐋 
	𝟏. 𝐄𝐌𝐏/𝟐𝟑/𝟎𝟎𝟎𝟑 - 𝐕𝐢𝐯𝐞𝐤 𝐕𝐢𝐩𝐮𝐥

company = frappe.db.sql("""SELECT DISTINCT company FROM `tabEmployee`;""",as_dict = True)

# frappe.errprint(company)

for i in company:

    # employees = frappe.db.sql("""SELECT employee,employee_name,cell_number FROM `tabEmployee` 
    #             WHERE status = 'Active' AND reports_to = %s AND company = %s""",('EMP/23/0000',i.company),as_dict=True)
      
    # frappe.errprint(employees)
    
    # chat contains the information about the reprts to
    
    chat = frappe.db.sql("""SELECT reports_to,default_shift,company FROM `tabEmployee`
           WHERE status = "Active" AND reports_to != " " AND company = %s GROUP BY reports_to;""",(i.company),as_dict=True)

    # frappe.errprint(chat)

    for i in chat:
        
        # Emplopyee Information of Reports To
    
        empInfo = frappe.db.sql("""SELECT a.employee,a.employee_name,a.cell_number,a.department,b.start_time,b.end_time FROM `tabEmployee` as a 
        INNER JOIN `tabShift Type` as b On a.default_shift = b.name 
        WHERE status = "Active" AND employee =  %s;""",(i.reports_to),as_dict=True)

        # Employee Count Reports To Wise

        empCount = frappe.db.sql("""SELECT COUNT(employee) as emp_count FROM `tabEmployee` 
        WHERE status = "Active" AND reports_to = %s  AND company = %s;""",(empInfo[0].employee,i.company),as_dict=True)
    
        # frappe.errprint(empCount)
        
        # Attendance Count Reports To Wise
    
        attCount =  frappe.db.sql("""SELECT COUNT(c.employee) as attCount FROM (
                                    SELECT a.employee ,b.reports_to,b.company FROM `tabEmployee Checkin` as a
                                    INNER JOIN `tabEmployee` as b
                                    ON a.employee = b.employee
                                    WHERE DATE(time) = CURDATE() 
                                    GROUP BY b.employee,DATE(time)
                                ) as c
                                WHERE c.reports_to=%s AND c.company=%s;""",(empInfo[0].employee,i.company),as_dict=True)
        
        # frappe.errprint(attCount)
        
        # Employee wise Leave Count for current date
        
        leaveCount = frappe.db.sql("""SELECT COUNT(b.employee) as leave_count FROM
                                    `tabEmployee` as  a
                                    INNER JOIN 
                                    `tabLeave Status Info` as b
                                    ON a.employee=b.employee
                                    WHERE a.status = "Active" 
                                    AND 
                                    b.date = CURDATE() 
                                    AND b.reply = 1
                                    AND a.reports_to = %s 
                                    AND a.company = %s;""",(empInfo[0].employee,i.company),as_dict=True)
                                    
        # Employee wise Weekly Off Count for current date
        
        weeklyoffCount = frappe.db.sql("""SELECT COUNT(b.employee) as weeklyoff_Count FROM
                                    `tabEmployee` as  a
                                    INNER JOIN 
                                    `tabLeave Status Info` as b
                                    ON a.employee=b.employee
                                    WHERE a.status = "Active" 
                                    AND 
                                    b.date = CURDATE() 
                                    AND b.reply = 2
                                    AND a.reports_to = %s 
                                    AND a.company = %s;""",(empInfo[0].employee,i.company),as_dict=True)
        
        # frappe.errprint(weeklyoffCount)
        
        unMarked = empCount[0].emp_count - (attCount[0].attCount + leaveCount[0].leave_count + weeklyoffCount[0].weeklyoff_Count)
    
        # frappe.errprint(unMarked)
    
        # Check if no attendance is marked
    
        if (unMarked != 0):
        
            msg=f"*{chat[0].company}* \n*Today's Attendance Report*\nMarked - *{attCount[0].attCount}*\nLeave - *{leaveCount[0].leave_count}*\nWeekly Off - *{weeklyoffCount[0].weeklyoff_Count}* \nUnmarked - *{unMarked}* \n*Out of* - *{empCount[0].emp_count}* \nfor details, see below 👇"
        
        else:
        
            msg=f"*{chat[0].company}* \n*Today's Attendance Report*\nMarked - *{attCount[0].attCount}*\nLeave - *{leaveCount[0].leave_count}*\nWeekly Off - *{weeklyoffCount[0].weeklyoff_Count}* \nUnmarked - *{unMarked}* \n*Out of* - *{empCount[0].emp_count}*"
            
        current_time= frappe.utils.get_datetime(frappe.utils.nowtime())
    
        first_time_report_interval=frappe.db.get_single_value('Attendance Setting', 'first_time_report_interval')
        
        second_time_report_interval=frappe.db.get_single_value('Attendance Setting', 'second_time_report_interval')
        
        first_time = frappe.utils.get_datetime('08:00:00')
        second_time = frappe.utils.get_datetime('09:00:00')
        third_time = frappe.utils.get_datetime('10:00:00')
        fourth_time = frappe.utils.get_datetime('11:00:00')
        fifth_time = frappe.utils.get_datetime('12:00:00')
        sixth_time = frappe.utils.get_datetime('13:00:00')
        seventh_time = frappe.utils.get_datetime('14:00:00')
        eighth_time = frappe.utils.get_datetime('15:00:00')
        nineth_time = frappe.utils.get_datetime('16:00:00')
        tenth_time = frappe.utils.get_datetime('17:00:00')
        eleventh_time = frappe.utils.get_datetime('18:00:00')
        twelveth_time = frappe.utils.get_datetime('19:00:00')
        thirteenth_time = frappe.utils.get_datetime('20:00:00')
        fourteenth_time = frappe.utils.get_datetime('21:00:00')
        fifteenth_time = frappe.utils.get_datetime('22:00:00')
        
        
        time_difference_one = current_time - first_time
        time_difference_two = current_time - second_time
        time_difference_three = current_time - third_time
        time_difference_four = current_time - fourth_time
        time_difference_five = current_time - fifth_time
        time_difference_six = current_time - sixth_time
        time_difference_seven = current_time - seventh_time
        time_difference_eight = current_time - eighth_time
        time_difference_nine = current_time - nineth_time
        time_difference_ten = current_time - tenth_time
        time_difference_eleven = current_time - eleventh_time
        time_difference_twelve = current_time - twelveth_time
        time_difference_thirteen = current_time - thirteenth_time
        time_difference_fourteen = current_time - fourteenth_time
        time_difference_fifteen = current_time - fifteenth_time
        
        
        # frappe.errprint(time_difference_four.total_seconds() / 60)
        
        difference_in_minutes_one = (time_difference_one.total_seconds() / 60)
        difference_in_minutes_two = (time_difference_two.total_seconds() / 60)
        difference_in_minutes_three = (time_difference_three.total_seconds() / 60)
        difference_in_minutes_four = (time_difference_four.total_seconds() / 60)
        difference_in_minutes_five = (time_difference_five.total_seconds() / 60)
        difference_in_minutes_six = (time_difference_six.total_seconds() / 60)
        difference_in_minutes_seven = (time_difference_seven.total_seconds() / 60)
        difference_in_minutes_eight = (time_difference_eight.total_seconds() / 60)
        difference_in_minutes_nine = (time_difference_nine.total_seconds() / 60)
        difference_in_minutes_ten = (time_difference_ten.total_seconds() / 60)
        difference_in_minutes_eleven = (time_difference_eleven.total_seconds() / 60)
        difference_in_minutes_twelve = (time_difference_twelve.total_seconds() / 60)
        difference_in_minutes_thirteen = (time_difference_thirteen.total_seconds() / 60)
        difference_in_minutes_fourteen = (time_difference_fourteen.total_seconds() / 60)
        difference_in_minutes_fifteen = (time_difference_fifteen.total_seconds() / 60)
    
        if (1 < difference_in_minutes_one <= 5 or 
            1 < difference_in_minutes_two <= 5 or 
            1 < difference_in_minutes_three <= 5 or 
            1 < difference_in_minutes_four <= 5 or 
            1 < difference_in_minutes_five <= 5 or
            1 < difference_in_minutes_six <= 5 or 
            1 < difference_in_minutes_seven <= 5 or 
            1 < difference_in_minutes_eight <= 5 or 
            1 < difference_in_minutes_nine <= 5 or 
            1 < difference_in_minutes_ten <= 5 or
            1 < difference_in_minutes_eleven <= 5 or 
            1 < difference_in_minutes_twelve <= 5 or 
            1 < difference_in_minutes_thirteen <= 5 or 
            1 < difference_in_minutes_fourteen <= 5 or 
            1 < difference_in_minutes_fifteen <= 5):
        
            frappe.call('gewin_payroll.wa.send_text_message',recipient=empInfo[0].cell_number,message=msg,preview="False") 
            frappe.call('gewin_payroll.wa.send_text_message',recipient="8918738368",message=msg,preview="False")
            frappe.call('gewin_payroll.wa.send_text_message',recipient="9340425342",message=msg,preview="False")
            
        if_check_in_is_not_marked=frappe.db.get_single_value('Attendance Setting', 'if_check_in_is_not_marked')
        
        current_date=frappe.utils.nowdate()
        
        if if_check_in_is_not_marked=="Yes":
            
           # attendance is containing information about the employees who are present for the current date.
            
            attendance=frappe.db.sql("""SELECT DISTINCT a.employee FROM `tabEmployee Checkin` AS a
            INNER JOIN `tabEmployee` AS b
            ON a.employee = b.employee
            WHERE DATE(a.time) = CURDATE() AND b.reports_to=%s AND b.company = %s;""",(empInfo[0].employee,i.company))
            
            # frappe.errprint(attendance)
            
            # # employees is containing information about those employees who are subscribed to whatsaapp notification.
            
            # employees=frappe.db.sql("""SELECT DISTINCT user_id,employee,employee_name,reports_to,department FROM `tabEmployee` 
            # WHERE status="Active" AND whatsapp_subscription="Yes" AND reports_to=%s AND company = %s;""",(empInfo[0].employee,i.company))
    
            employees=frappe.db.sql("""SELECT DISTINCT a.user_id,a.employee,a.employee_name,a.reports_to,a.department,b.start_time 
            FROM `tabEmployee` as a
            INNER JOIN 
            `tabShift Type` as b
            ON a.default_shift = b.name
            WHERE a.status="Active" AND 
            a.whatsapp_subscription="Yes" AND 
            a.reports_to=%s AND a.company = %s;""",(empInfo[0].employee,i.company))

            # frappe.errprint(employees)
            
            # leaves is containing information about the employees who has applied for any leave for current date or if any employee has marked their weekly off
        
            # leaves=frappe.db.sql("""SELECT 
            #         a.employee,a.employee_name,a.leave_type,a.department,a.from_date,a.to_date,a.half_day,a.half_day_date,a.total_leave_days
            #         FROM
            #         `tabLeave Application` AS a
            #         INNER JOIN `tabEmployee` AS b
            #         ON a.employee = b.employee
            #         WHERE CURDATE() BETWEEN a.from_date AND a.to_date AND b.reports_to=%s AND b.company = %s;""",
            #         (empInfo[0].employee,i.company),as_dict=True)
                    
            leaves=frappe.db.sql("""SELECT a.employee, a.date, a.reply, a.description, b.reports_to, b.company
                                    FROM `tabLeave Status Info` as a
                                    INNER JOIN `tabEmployee` as b
                                    ON a.employee = b.employee
                                    WHERE a.date = CURDATE() AND
                                    b.status="Active" AND 
                                    b.reports_to=%s AND 
                                    b.company = %s;""",(empInfo[0].employee,i.company),as_dict=True)
                    
            # frappe.errprint(leaves)

            # Append all the values into c, who has not marked their attendance

            c = ()
            
            for e in employees:
                
                flag=False
                
                for a in attendance: 
                    
                    if e[1]==a[0]:
                        
                        flag=True
                        
                        break
                    
                if (flag==False):
                    
                    c=c+(e,)
                    
            # Append all the values into k, neither who has not marked their attendance nor appled for any leave       
                    
            k=()
            
            for z in c:
                
                fg=False
                
                for p in leaves:
                    
                    if z[1]==p.employee:
                        
                        fg=True
                        
                        break
                    
                if(fg==False):
                    
                    k=k+(z,)
                    
            # Stores all employee information (employee id, employee name) reports to wise into d
            
            d={}
    
            for a in k:
                
                phone=frappe.db.sql("""SELECT cell_number FROM `tabEmployee` WHERE employee=%s""",(a[3]),as_dict=True)
            
                if phone:
                    
                    if len(phone[0].cell_number)>=10:
                        
                        s = a+(phone[0].cell_number,)
                        
                        # frappe.errprint(s)
                        
                        if s[6] in d.keys():
                    
                            if s[4] in d[s[6]].keys():
                                
                                d[s[6]][s[4]].append([s[1], s[2],s[5]])
                                
                            else:
                                
                                d[s[6]][s[4]]=[]
                                d[s[6]][s[4]].append([s[1], s[2],s[5]])
                            
                        else:
                            d[s[6]]={}
                            d[s[6]][s[4]] = []
                            d[s[6]][s[4]].append([s[1],s[2],s[5]])
                
                    else:
                        
                        frappe.errprint("Phone Number is not Correct")
                else:
                    
                    frappe.errprint("Phone Number is not present")
                    
            # frappe.errprint(d)  
            
            for t in d:
                
                msg="""Update on : %s \nNo attendance has been marked on %s for- \n"""%(frappe.utils.format_time(frappe.utils.nowtime(), "HH:mm:ss"),frappe.format_date(current_date, "dd-MM-YYYY"))
            
                for q in d[t]:
        
                    count = 0
                    
                    msg = msg + """ *%s* \n""" %(q)
                    
                    for y in d[t][q]:
                    
                        count=count+1;
            
                        msg = msg + """ %s. %s-%s(SST) \n""" %(count,y[1],frappe.utils.format_time(y[2],"HH:mm"))
                    
                msg = msg + """ *SST = Shift Start Time* """
                
                current_time= frappe.utils.get_datetime(frappe.utils.nowtime())
               
                first_time_report_interval=frappe.db.get_single_value('Attendance Setting', 'first_time_report_interval')
                second_time_report_interval=frappe.db.get_single_value('Attendance Setting', 'second_time_report_interval')
                
                
                first_time = frappe.utils.get_datetime('08:00:00')
                second_time = frappe.utils.get_datetime('09:00:00')
                third_time = frappe.utils.get_datetime('10:00:00')
                fourth_time = frappe.utils.get_datetime('11:00:00')
                fifth_time = frappe.utils.get_datetime('12:00:00')
                sixth_time = frappe.utils.get_datetime('13:00:00')
                seventh_time = frappe.utils.get_datetime('14:00:00')
                eighth_time = frappe.utils.get_datetime('15:00:00')
                nineth_time = frappe.utils.get_datetime('16:00:00')
                tenth_time = frappe.utils.get_datetime('17:00:00')
                eleventh_time = frappe.utils.get_datetime('18:00:00')
                twelveth_time = frappe.utils.get_datetime('19:00:00')
                thirteenth_time = frappe.utils.get_datetime('20:00:00')
                fourteenth_time = frappe.utils.get_datetime('21:00:00')
                fifteenth_time = frappe.utils.get_datetime('22:00:00')
                
                
                time_difference_one = current_time - first_time
                time_difference_two = current_time - second_time
                time_difference_three = current_time - third_time
                time_difference_four = current_time - fourth_time
                time_difference_five = current_time - fifth_time
                time_difference_six = current_time - sixth_time
                time_difference_seven = current_time - seventh_time
                time_difference_eight = current_time - eighth_time
                time_difference_nine = current_time - nineth_time
                time_difference_ten = current_time - tenth_time
                time_difference_eleven = current_time - eleventh_time
                time_difference_twelve = current_time - twelveth_time
                time_difference_thirteen = current_time - thirteenth_time
                time_difference_fourteen = current_time - fourteenth_time
                time_difference_fifteen = current_time - fifteenth_time
                
                # frappe.errprint(time_difference_four.total_seconds() / 60)
                
                difference_in_minutes_one = (time_difference_one.total_seconds() / 60)
                difference_in_minutes_two = (time_difference_two.total_seconds() / 60)
                difference_in_minutes_three = (time_difference_three.total_seconds() / 60)
                difference_in_minutes_four = (time_difference_four.total_seconds() / 60)
                difference_in_minutes_five = (time_difference_five.total_seconds() / 60)
                difference_in_minutes_six = (time_difference_six.total_seconds() / 60)
                difference_in_minutes_seven = (time_difference_seven.total_seconds() / 60)
                difference_in_minutes_eight = (time_difference_eight.total_seconds() / 60)
                difference_in_minutes_nine = (time_difference_nine.total_seconds() / 60)
                difference_in_minutes_ten = (time_difference_ten.total_seconds() / 60)
                difference_in_minutes_eleven = (time_difference_eleven.total_seconds() / 60)
                difference_in_minutes_twelve = (time_difference_twelve.total_seconds() / 60)
                difference_in_minutes_thirteen = (time_difference_thirteen.total_seconds() / 60)
                difference_in_minutes_fourteen = (time_difference_fourteen.total_seconds() / 60)
                difference_in_minutes_fifteen = (time_difference_fifteen.total_seconds() / 60)
        
                if (1 < difference_in_minutes_one <= 5 or
                    1 < difference_in_minutes_two <= 5 or 
                    1 < difference_in_minutes_three <= 5 or
                    1 < difference_in_minutes_four <= 5 or 
                    1 < difference_in_minutes_five <= 5 or
                    1 < difference_in_minutes_six <= 5 or
                    1 < difference_in_minutes_seven <= 5 or 
                    1 < difference_in_minutes_eight <= 5 or
                    1 < difference_in_minutes_nine <= 5 or
                    1 < difference_in_minutes_ten <= 5 or
                    1 < difference_in_minutes_eleven <= 5 or
                    1 < difference_in_minutes_twelve <= 5 or 
                    1 < difference_in_minutes_thirteen <= 5 or
                    1 < difference_in_minutes_fourteen <= 5 or
                    1 < difference_in_minutes_fifteen <= 5):
                
                    frappe.call('gewin_payroll.wa.send_text_message',recipient=t,message=msg,preview="False")
                    frappe.call('gewin_payroll.wa.send_text_message',recipient="8918738368",message=msg,preview="False")
                    frappe.call('gewin_payroll.wa.send_text_message',recipient="9340425342",message=msg,preview="False")
                
           
    frappe.response["message"]="success"
