𝐏𝐮𝐫𝐩𝐨𝐬𝐞 : 𝐓𝐡𝐢𝐬 𝐬𝐞𝐫𝐯𝐞𝐫 𝐬𝐜𝐫𝐢𝐩𝐭 𝐢𝐬 𝐰𝐫𝐢𝐭𝐭𝐞𝐧 𝐟𝐨𝐫 𝐬𝐞𝐧𝐝𝐢𝐧𝐠 𝐚𝐧 𝐚𝐥𝐞𝐫𝐭 𝐭𝐨 𝐭𝐡𝐞 𝐄𝐦𝐩𝐥𝐨𝐲𝐞𝐞 𝐚𝐬𝐤𝐢𝐧𝐠 𝐡𝐞/𝐬𝐡𝐞 𝐭𝐨 𝐬𝐡𝐚𝐫𝐞 𝐭𝐡𝐞 𝐜𝐮𝐫𝐫𝐞𝐧𝐭 𝐥𝐨𝐜𝐚𝐭𝐢𝐨𝐧 𝐢𝐧 𝐨𝐫𝐝𝐞𝐫 𝐭𝐨 𝐦𝐚𝐫𝐤 𝐡𝐢𝐬/𝐡𝐞𝐫 𝐚𝐭𝐭𝐞𝐧𝐝𝐚𝐧𝐜𝐞. 𝐓𝐡𝐢𝐬 𝐚𝐥𝐞𝐫𝐭 𝐰𝐢𝐥𝐥 𝐭𝐫𝐢𝐠𝐠𝐞𝐫 𝐛𝐞𝐟𝐨𝐫𝐞 𝐚𝐧𝐝 𝐚𝐟𝐭𝐞𝐫 𝐬𝐡𝐢𝐟𝐭 𝐬𝐭𝐚𝐫𝐭 𝐚𝐧𝐝 𝐬𝐡𝐢𝐟𝐭 𝐞𝐧𝐝 𝐭𝐢𝐦𝐞.( 𝐏𝐫𝐞𝐬𝐞𝐧𝐭𝐥𝐲 𝐭𝐡𝐞 𝐯𝐚𝐥𝐮𝐞𝐬 𝐚𝐫𝐞 𝐡𝐚𝐫𝐝𝐜𝐨𝐝𝐞𝐝).

𝗘𝘅𝗮𝗺𝗽𝗹𝗲: 𝐇𝐢 𝐒𝐮𝐯𝐫𝐨 𝐃𝐞𝐛𝐝𝐚𝐬. 𝐏𝐥𝐞𝐚𝐬𝐞 𝐬𝐡𝐚𝐫𝐞 𝐲𝐨𝐮𝐫 𝐜𝐮𝐫𝐫𝐞𝐧𝐭 𝐥𝐨𝐜𝐚𝐭𝐢𝐨𝐧 𝐟𝐨𝐫 𝐦𝐚𝐫𝐤𝐢𝐧𝐠 𝐲𝐨𝐮𝐫 𝐚𝐭𝐭𝐞𝐧𝐝𝐚𝐧𝐜𝐞.

i1=10
i2=10
i3=30
i4=5
i5=30

emp=frappe.db.sql(""" SELECT a.employee,a.employee_name,a.country_code,a.cell_number,
                        b.start_time,b.end_time,a.attendance_reminder_type,a.preferred_language
                    FROM 
                    `tabEmployee` as a
                    INNER JOIN 
                    `tabShift Type` as b
                    ON a.default_shift=b.name
                    WHERE a.status="Active";""",as_dict=True)
                    
for k in emp:
    
    recipient=k.country_code+k.cell_number
    
    shift_start_time=" "
    shift_end_time=" "
    shift_start=k.start_time
    shift_end=k.end_time
    
    if (shift_end>shift_start):
        frappe.errprint("ok")
        time_difference=shift_start.seconds
        hours = time_difference // 3600 
        minutes = (time_difference // 60) % 60
        seconds = time_difference % 60
        
        time_difference_one=shift_end.seconds
        hours_one = time_difference_one // 3600  # 3600 seconds in an hour
        minutes_one = (time_difference_one // 60) % 60  # 60 seconds in a minute
        seconds_one = time_difference_one % 60
            
        # frappe.errprint(frappe.utils.add_to_date(frappe.utils.getdate(),hours=hours,minutes=minutes,seconds=seconds))
        shift_start_time=frappe.utils.add_to_date(frappe.utils.getdate(),hours=hours,minutes=minutes,seconds=seconds)
        shift_end_time=frappe.utils.add_to_date(frappe.utils.getdate(),hours=hours_one,minutes=minutes_one,seconds=seconds_one)
        # time_diff=frappe.utils.time_diff(frappe.utils.now(),shift_start_time)
        # frappe.errprint(time_diff.total_seconds()/60)
        
    else:
        frappe.errprint("reverse")
        
        
        
        
        time_difference=shift_start.seconds
        hours = time_difference // 3600  # 3600 seconds in an hour
        minutes = (time_difference // 60) % 60  # 60 seconds in a minute
        seconds = time_difference % 60
        
        # time_diff=frappe.utils.time_diff(frappe.utils.now(),"00:00:00")
        
        time_difference_one=shift_end.seconds
        hours_one = time_difference_one // 3600  # 3600 seconds in an hour
        minutes_one = (time_difference_one // 60) % 60  # 60 seconds in a minute
        seconds_one = time_difference_one % 60
        
        time_diff=frappe.utils.time_diff(frappe.utils.now(),"00:00:00")
        
        # frappe.errprint(time_diff.total_seconds()/3600)
        
        if(time_diff.total_seconds()/3600 >= hours or time_diff.total_seconds()/3600 >= (shift_end.seconds)//3600):
                
            shift_start_time=frappe.utils.add_to_date(frappe.utils.getdate(),hours=hours,minutes=minutes,seconds=seconds)
            shift_end_time=frappe.utils.add_to_date(frappe.utils.getdate(),days=1,hours=hours_one,minutes=minutes_one,seconds=seconds_one)
        else:
            shift_start_time=frappe.utils.add_to_date(frappe.utils.getdate(),days=-1,hours=hours,minutes=minutes,seconds=seconds)
            shift_end_time=frappe.utils.add_to_date(frappe.utils.getdate(),hours=hours_one,minutes=minutes_one,seconds=seconds_one)
            
    # frappe.errprint(shift_start_time)  
    # frappe.errprint(shift_end_time)
    t1=frappe.utils.add_to_date(shift_start_time,minutes=-i1)
    frappe.errprint(t1)
    t11=frappe.utils.add_to_date(t1,minutes=4)
    
    t2=frappe.utils.add_to_date(shift_start_time,minutes=i2)
    frappe.errprint(t2)
    t21=frappe.utils.add_to_date(t2,minutes=4)
    
    t3=frappe.utils.add_to_date(shift_start_time,minutes=i3)
    frappe.errprint(t3)
    t31=frappe.utils.add_to_date(t3,minutes=4)
    
    t4=frappe.utils.add_to_date(shift_end_time,minutes=-i4)
    frappe.errprint(t4)
    t41=frappe.utils.add_to_date(t4,minutes=4)
    
    t5=frappe.utils.add_to_date(shift_end_time,minutes=i5)
    frappe.errprint(t5)
    t51=frappe.utils.add_to_date(t5,minutes=4)
    
    
    pre_count=frappe.db.sql("""SELECT count(employee) as count,employee FROM `tabEmployee Checkin` WHERE Date(time)=CURDATE() AND employee=%s;""",k.employee,as_dict=True)
    # frappe.errprint(pre_count[0].count)
    
    if(pre_count[0].count==0):
    
        
        # frappe.errprint(k.employee)
        leave_count=frappe.db.sql("""SELECT 
                                    count(employee) as countl
                                    FROM
                                    `tabLeave Application`
                                    WHERE employee=%s AND status="Approved" AND CURDATE() BETWEEN from_date AND to_date;""",(k.employee),as_dict=True)
        
        if(leave_count[0].countl==0):
            
            holiday_count=frappe.db.sql("""SELECT count(c.holiday_date) as counth
                                            FROM 
                                            `tabEmployee` as a
                                            INNER JOIN 
                                            `tabHoliday List` as b
                                            ON a.holiday_list=b.name
                                            INNER JOIN 
                                            `tabHoliday` as c
                                            ON b.name=c.parent
                                            WHERE a.employee=%s
                                            AND c.holiday_date=CURDATE();""",(k.employee),as_dict=True)
                                            
            if(holiday_count[0].counth==0):
                
                # frappe.errprint(k.employee)
                # frappe.errprint(k.cell_number)
                # if(k.attendance_reminder_type=="1"):
                #     msg=f"Hi! {k.employee_name}.Please mark your attendance.Enter 'I' for Checkin or 'O' for Checkout."
                    
                # elif(k.attendance_reminder_type=="2"):
                #     msg=f"Hi! {k.employee_name}.Please share current location to mark your attendance."
                    
                # elif(k.attendance_reminder_type=="3"):
                #     msg=f"Hi! {k.employee_name}.Please share current location to mark your attendance."
                    
                ct=frappe.utils.get_datetime(frappe.utils.now())
                if(t1<ct<=t11):
                    frappe.call('gewin_payroll.wa.send_attendance_notification',recipient=recipient,employee_name=k.employee_name,attendance_message_type=k.attendance_reminder_type,language=k.preferred_language)
                    
                elif(t2<ct<=t21): 
                    frappe.call('gewin_payroll.wa.send_attendance_notification',recipient=recipient,employee_name=k.employee_name,attendance_message_type=k.attendance_reminder_type,language=k.preferred_language)
                    
                elif(t3<ct<=t31):
                    frappe.call('gewin_payroll.wa.send_attendance_notification',recipient=recipient,employee_name=k.employee_name,attendance_message_type=k.attendance_reminder_type,language=k.preferred_language)    
    
    
    else:
        frappe.errprint(k.employee)
        
        log_type=frappe.db.sql("""SELECT log_type 
        FROM
        `tabEmployee Checkin`
        WHERE employee=%s
        ORDER BY time DESC limit 1;""",(k.employee),as_dict=True)
         
        frappe.errprint(log_type[0].log_type) 
        
        if(log_type[0].log_type!="OUT"):
        
            # if(k.attendance_reminder_type=="1"):
            #         msg=f"Hi! {k.employee_name}.Please mark your attendance.Enter 'I' for Checkin or 'O' for Checkout."
                    
            # elif(k.attendance_reminder_type=="2"):
            #     msg=f"Hi! {k.employee_name}.Please share current location to mark your attendance."
                
            # elif(k.attendance_reminder_type=="3"):
            #     msg=f"Hi! {k.employee_name}.Please share current location to mark your attendance."
            
            ct=frappe.utils.get_datetime(frappe.utils.now())
            
            if(t4 < ct <= t41):
                frappe.call('gewin_payroll.wa.send_attendance_notification',recipient=recipient,employee_name=k.employee_name,attendance_message_type=k.attendance_reminder_type,language=k.preferred_language)
                
            elif(t5 < ct <= t51): 
                frappe.call('gewin_payroll.wa.send_attendance_notification',recipient=recipient,employee_name=k.employee_name,attendance_message_type=k.attendance_reminder_type,language=k.preferred_language)